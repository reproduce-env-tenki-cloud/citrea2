name: Publish to Clementine
run-name: Publish to Clementine on ${{ inputs.environment }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to Publish'
        required: true
        type: choice
        options:
        - Dev-Net
        - Test-Net

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  operator-build-and-push:
    runs-on: tenki-standard-autoscale
    environment: ${{ inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: chmod binary
      run: |
        tar -xzvf devops/operator/server.tar.gz -C devops/operator/
        rm devops/operator/server.tar.gz
        chmod +x devops/operator/run.sh
        chmod +x devops/operator/server
        

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      uses: docker/build-push-action@v6
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: operator-1-repository
      with:
        file: ./devops/operator/Dockerfile
        context: ./devops/operator
        tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        platforms: linux/arm64
        push: false
        load: true
        provenance: false

    - name: Tag latest and push image to Amazon ECR
      id: push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: operator-1-repository
      run: |
        docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/operator-2-repository:latest
        docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/operator-3-repository:latest

        
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        docker push ${{ env.ECR_REGISTRY }}/operator-2-repository:latest
        docker push ${{ env.ECR_REGISTRY }}/operator-3-repository:latest
  verifier-build-and-push:
    runs-on: tenki-standard-autoscale
    environment: ${{ inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: chmod binary
      run: |
        tar -xzvf devops/verifier/server.tar.gz -C devops/verifier/
        rm devops/verifier/server.tar.gz
        chmod +x devops/verifier/run.sh
        chmod +x devops/verifier/server
        

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      uses: docker/build-push-action@v6
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: verifier-1-repository
      with:
        file: ./devops/verifier/Dockerfile
        context: ./devops/verifier
        tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        platforms: linux/arm64
        push: false
        load: true
        provenance: false

    - name: Tag latest and push image to Amazon ECR
      id: push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: verifier-1-repository
      run: |
        docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/verifier-2-repository:latest
        docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/verifier-3-repository:latest
        docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/verifier-4-repository:latest
        docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/verifier-5-repository:latest
        docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/verifier-6-repository:latest
        docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/verifier-7-repository:latest

        
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        docker push ${{ env.ECR_REGISTRY }}/verifier-2-repository:latest
        docker push ${{ env.ECR_REGISTRY }}/verifier-3-repository:latest
        docker push ${{ env.ECR_REGISTRY }}/verifier-4-repository:latest
        docker push ${{ env.ECR_REGISTRY }}/verifier-5-repository:latest
        docker push ${{ env.ECR_REGISTRY }}/verifier-6-repository:latest
        docker push ${{ env.ECR_REGISTRY }}/verifier-7-repository:latest

  aggregator-build-and-push:
    environment: ${{ inputs.environment }}
    runs-on: tenki-standard-autoscale
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: chmod binary
      run: |
        tar -xzvf devops/aggregator/server.tar.gz -C devops/aggregator/
        rm devops/aggregator/server.tar.gz
        chmod +x devops/aggregator/run.sh
        chmod +x devops/aggregator/server

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      uses: docker/build-push-action@v6
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: aggregator-repository
      with:
        file: ./devops/aggregator/Dockerfile
        context: ./devops/aggregator
        tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        platforms: linux/arm64
        push: false
        load: true
        provenance: false

    - name: Tag latest and push image to Amazon ECR
      id: push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: aggregator-repository
      run: |
        
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest

        